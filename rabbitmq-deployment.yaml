apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.service.expose: "true"
    kompose.service.type: loadbalancer
    kompose.version: 1.26.1 (1b040dd2)
  creationTimestamp: null
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.service.expose: "true"
        kompose.service.type: loadbalancer
        kompose.version: 1.26.1 (1b040dd2)
      creationTimestamp: null
      labels:
        io.kompose.service: rabbitmq
    spec:
      containers:
        - env:
            - name: RABBITMQ_DEFAULT_PASS
              value: guest
            - name: RABBITMQ_DEFAULT_USER
              value: guest
            - name: RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
              value: -rabbit log [{console,[{enabled,true},{level,info}]}]
          image: rabbitmq:3-management
          name: rabbitmq
          ports:
            - containerPort: 1883
            - containerPort: 15672
            - containerPort: 15670
            - containerPort: 15675
            - containerPort: 5672
          resources: {}
          volumeMounts:
            - mountPath: /etc/rabbitmq/conf.d/20-rabbitmq-docker.conf
              name: rabbitmq-conf
              subPath: 20-rabbitmq-docker.conf
            - mountPath: /etc/rabbitmq/enabled_plugins
              name: enabled-plugins
              subPath: enabled_plugins
      hostname: knowledge-rabbit
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: rabbitmq-docker.config
                path: 20-rabbitmq-docker.conf
            name: rabbitmq-conf
          name: rabbitmq-conf
        - configMap:
            items:
              - key: enabled_plugins
                path: enabled_plugins
            name: enabled-plugins
          name: enabled-plugins
status: {}
